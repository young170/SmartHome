// To get started, press Ctrl+Space (or Option+Esc) to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html

/ {
	dht22 {
		compatible = "aosong,dht";
		status = "okay";
		dio-gpios = <&gpio0 13 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
		dht22;
	};
};

&i2c0 {
    clock-frequency = <I2C_BITRATE_STANDARD>;

    ht16k33_ledmatrix: ht16k33@70 {
        compatible = "holtek,ht16k33";
        reg = <0x70>;

        keyscan {
            compatible = "holtek,ht16k33-keyscan";
        };
    };
};


/ {
    aliases {
        // sw0 = &pin7_button0;
        myserial = &uart1;
    };

    // buttons {
    //     pin7_button0: button_0 {
    //         gpios = <&gpio0 7 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
    //     };
    // };
};



// &uart0 {
//     status = "disabled";
// };

arduino_serial: &uart1 {
    status = "okay";
    compatible = "nordic,nrf-uart";
	current-speed = <9600>;
	pinctrl-0 = <&uart1_default>;
	pinctrl-1 = <&uart1_sleep>;
	pinctrl-names = "default", "sleep";
};

&pinctrl {
	uart1_default: uart1_default {
		group1 {
			psels = <NRF_PSEL(UART_RX, 1, 10)>;
			bias-pull-up;
		};
		group2 {
//  			  psels = <NRF_PSEL(UART_TX, 1, 11)>;
               psels = <NRF_PSEL(UART_TX, 1, 8)>;
		};
	};

	uart1_sleep: uart1_sleep {
		group1 {
			psels = <NRF_PSEL(UART_RX, 1, 10)>,
				<NRF_PSEL(UART_TX, 1, 11)>;
			//psels = <NRF_PSEL(UART_RX, 0, 7)>, <NRF_PSEL(UART_TX,0, 6)>;
			low-power-enable;
		};
	};
};
